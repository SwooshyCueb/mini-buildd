#!/bin/bash -e

# @hack: Must be the same as in mbd-common.sh (we cannot include that so that pre-configuration is possible).
MBD_REPCONFIGFILE="/home/mini-buildd/.mini-buildd.conf"
MBD_REPCONFIGVARS="mbd_id mbd_rephost mbd_httpport mbd_sshport mbd_mail mbd_extdocurl mbd_dists mbd_archs mbd_archall"

. /usr/share/debconf/confmodule

SUPPORTED_DISTS="sarge, etch, lenny, sid"
SUPPORTED_ARCHS="i386, amd64, powerpc, arm, sparc, alpha, mips, mipsel, hppa, ia64, s390, m68k"

# @hack: Duplicate code in mini-buildd-rep.postinstall, please sync!
mbdDynConfVars()
{
	for arch in `echo "${mbd_archs}" | tr -d ","`; do
		echo -n "mbd_bldhost_${arch} "
		echo -n "mbd_deb_build_options_${arch} "
	done
	for dist in `echo "${mbd_dists}" | tr -d ","`; do
		for kind in base extra; do
			for arch in any `echo "${mbd_archs}" | tr -d ","`; do
				echo -n "mbd_src_`echo ${dist} | tr "-" "_"`_${kind}_${arch} "
			done
		done
	done
}

# Set on-the-fly defaults, where appropriate
mbdSetDefault()
{
	local key="${1}"
	local default="${2}"
	local value="${default}"

	if [ -n "${!key}" ]; then
		value="${!key}"
	else
		if db_get mini-buildd-rep/${key} && [ -n "${RET}" ]; then
			value="${RET}"
		fi
	fi
	db_set mini-buildd-rep/${key} "${value}"
	eval "${key}=\"${value}\""
}

#
# Start processing
#

# Load config file, if it exists.
if [ -e "${MBD_REPCONFIGFILE}" ]; then
	. "${MBD_REPCONFIGFILE}" || true

	# Store values from config back to debconf
	for v in ${MBD_REPCONFIGVARS} `mbdDynConfVars`; do
		db_set mini-buildd-rep/${v} "${!v}" || true
	done
fi

# Easy questions
mbdSetDefault mbd_id "`hostname`"
db_input high mini-buildd-rep/mbd_id || true

mbdSetDefault mbd_rephost "`hostname -f`"
db_input medium mini-buildd-rep/mbd_rephost || true

db_input low mini-buildd-rep/mbd_httpport || true
db_input low mini-buildd-rep/mbd_sshport || true

mbdSetDefault mbd_mail "mini-buildd@`hostname -f`"
db_input high mini-buildd-rep/mbd_mail || true

mbdSetDefault mbd_extdocurl ""
db_input medium mini-buildd-rep/mbd_extdocurl || true

# Dists && Archs: We need these values to compute further questions
mbdSetDefault mbd_dists "etch"
db_subst mini-buildd-rep/mbd_dists DISTS "${SUPPORTED_DISTS}"
db_input high mini-buildd-rep/mbd_dists || true

mbdSetDefault mbd_archs "`dpkg --print-architecture`"
db_subst mini-buildd-rep/mbd_archs ARCHS "${SUPPORTED_ARCHS}"
db_input high mini-buildd-rep/mbd_archs || true
db_go || true

db_get mini-buildd-rep/mbd_dists || true
mbd_dists="${RET}"
db_get mini-buildd-rep/mbd_archs || true
mbd_archs="${RET}"

# What arch should compile arch=all packages?
mbdSetDefault mbd_archall "`echo ${mbd_archs} | cut -d',' -f1`"
db_subst mini-buildd-rep/mbd_archall ARCHS "${mbd_archs}"
db_input high mini-buildd-rep/mbd_archall || true

# Configure sources lists (mbd_src_DIST_[base|extra]_ARCH)
for dist in `echo "${mbd_dists}" | tr -d ","`; do
	for kind in base extra; do
		for arch in any `echo "${mbd_archs}" | tr -d ","`; do
			KEY="mbd_src_`echo ${dist} | tr "-" "_"`_${kind}_${arch}"
			db_register mini-buildd-rep/mbd_source "mini-buildd-rep/${KEY}"
			db_subst "mini-buildd-rep/${KEY}" DIST "${dist}"
			db_subst "mini-buildd-rep/${KEY}" KIND "${kind}"
			db_subst "mini-buildd-rep/${KEY}" ARCH "${arch}"

			# Ugly prio choser:
			# Base/any lists: high (this must be configured)
			# Extra/any lists: medium (usually not needed)
			# Arch-special lists: low (only needed in special cases)
			if [ "${kind}" = "base" -a "${arch}" = "any" ]; then
				PRIO="high"
				mbdSetDefault ${KEY} "ftp://ftp.debian.org/debian ${dist} main contrib non-free"
			elif [ "${kind}" = "extra" -a "${arch}" = "any" ]; then
				PRIO="medium"
			else
				PRIO="low"
			fi
			db_input ${PRIO} "mini-buildd-rep/${KEY}" || true
		done
	done
done

# Configure build hosts (mbd_bldhost_ARCH)
for arch in `echo "${mbd_archs}" | tr -d ","`; do
	# Get build host
	KEY="mbd_bldhost_${arch}"
	db_register mini-buildd-rep/mbd_bldhost "mini-buildd-rep/${KEY}"
	db_subst "mini-buildd-rep/${KEY}" ARCH "${arch}"
	if [ "${arch}" = "`dpkg --print-architecture`" ]; then
		mbdSetDefault ${KEY} "`hostname -f`"
	fi
	db_input high "mini-buildd-rep/${KEY}" || true

	# Get deb_build_options
	KEY="mbd_deb_build_options_${arch}"
	db_register mini-buildd-rep/mbd_deb_build_options "mini-buildd-rep/${KEY}"
	db_subst "mini-buildd-rep/${KEY}" ARCH "${arch}"
	mbdSetDefault ${KEY} ""
	db_input low "mini-buildd-rep/${KEY}" || true
done

# Note to the user
db_get mini-buildd-rep/mbd_rephost || true
REPHOST="${RET}"
db_get mini-buildd-rep/mbd_httpport || true
HTTPPORT="${RET}"
db_subst "mini-buildd-rep/overview" URL "http://${REPHOST}:${HTTPPORT}/~mini-buildd/"
db_input high "mini-buildd-rep/overview" || true

db_go || true
