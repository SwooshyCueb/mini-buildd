#!/bin/bash -e

# Get versions of known basis distributions
mbdBasedist2Version()
{
	# Known base distributions
	local woody=30
	local sarge=31
	local etch=40
	local lenny=50
	local squeeze=60
	local wheezy=70
	local sid=SID

	local version=${!1}
	if [ -z "${version}" ]; then
		${MBD_LOG} -s "E: Unknown base dist ${1}."
		return 1
	fi
	echo -n "${version}"
}

mbdPrevStable()
{
	case $1 in
		sarge)
			printf "woody"
			;;
		etch)
			printf "sarge"
			;;
		lenny)
			printf "etch"
			;;
		squeeze)
			printf "lenny"
			;;
		wheezy)
			printf "squeeze"
			;;
		sid)
			printf "wheezy"
			;;
		*)
			printf ""
	esac
}

read -e -i "mini-buildd-$(hostname)" -p "Dput target? " dput_target
read -e -i "test" -p "mini-buildd reposiory id? " id
read -e -i "$(lsb_release --short --codename)" -p "upload to base distribution? " dist
read -e -i "experimental" -p "upload to experimental or unstable? " dest
read -e -i "$(mbdPrevStable ${dist})-${id}-${dest}" -p "auto backports for? " backports

version="$(date +%Y%m%d%H%M%S)~${id}$(mbdBasedist2Version "${dist}")+"
if [ "${dest}" = "experimental" ]; then
	version+="0"
else
	version+="1"
fi

PKG_DIR="$(dirname $(readlink -f ${0}))/packages/"
PACKAGES="${*}"
[ -n "${PACKAGES}" ] || PACKAGES=$(ls "${PKG_DIR}/")

printf "Acting on: %s\n" "${PACKAGES}"

builddir="$(mktemp -d)"
cd "${builddir}"

for P in ${PACKAGES}; do
	(
		cp -a "${PKG_DIR}/${P}" "${P}"
		cd "${P}"
		autoreconf --force --install
		debchange --newversion "${version}" --force-distribution --dist "${dist}-${id}-${dest}" "test build for mini-buildd"
		[ -z "${backports}" ] || debchange "MINI_BUILDD: AUTO_BACKPORTS: ${backports}"
		dpkg-buildpackage -us -uc -S
	)
done

action=u

while [ "${action}" != "q" ]; do
	dput -u -f "${dput_target}" *.changes || true
	read -e -i"r" -p "(q)uit and purge build dir '${builddir}', or (r)e-upload? " action
done
rm -rfv "${builddir}"
