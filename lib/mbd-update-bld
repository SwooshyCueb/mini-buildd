#!/bin/sh -e

. `dirname $0`/mbd-common.sh
. "${MBD_BLDCONFIGFILE}"

# Update config file; this must be first
if [ ! -e "/etc/init.d/mini-buildd-rep" ]; then
	# -bld w/o -rep only; retrieve config from rephost.
	mbdGetUrl "${MBD_REPCONFIGFILE}" "http://${mbd_rephttphost}/~mini-buildd/config" || true
fi

mbd_opt_init "Mini-buildd: Builder update script."
mbd_opt_parse "$@"
mbdCheckUser mini-buildd

cd "${MBD_HOME}"
. "${MBD_REPCONFIGFILE}"

mkdir -p "bld/builds"
mkdir -p "bld/chroots"

cat <<EOF >"${MBD_SBUILDCONFIGFILE}"
\$sbuild_mode = "user";
\$log_dir = "/tmp";
\$mailfrom = "${MBD_AUTOBUILD_MAINTAINER} on `hostname -f` <${mbd_mail}>";
\$mailto = "${mbd_mail}";
\$maintainer_name='${MBD_AUTOBUILD_MAINTAINER}';
EOF
${MBD_LOG} -s "${MBD_SBUILDCONFIGFILE} updated."

${MBD_LIB}/mbd-update-common

# Make some items accessible via http
${MBD_LOG} -s "`ln -s -f -v ../bld public_html/ 2>&1`"

mbdUpdateSshKeyring "${mbd_rephost}"

# Check/prepare chroots for all dists.
for d in `echo "${mbd_dists}" | tr -d ","`; do
	MBD_TMP_ID="${d}-${mbd_id}";
	MBD_TMP_DIR="${MBD_HOME}/bld/chroots/${MBD_TMP_ID}"
	mkdir -p -v "${MBD_TMP_DIR}"

	# Create base sources
	# @todo: Create base sources: arch-specific
	MBD_TMP_BASE="${MBD_TMP_DIR}/base.any.list"
	cat <<EOF >"${MBD_TMP_BASE}"
deb `mbdBldGetMirror ${d}` ${d} main contrib non-free
EOF

	# Create mbd sources
	MBD_TMP_MBD="${MBD_TMP_DIR}/mbd.any.list"
	mkdir -p `basename "${MBD_TMP_MBD}"`
	cat <<EOF >"${MBD_TMP_MBD}"
deb http://${mbd_rephttphost}/~mini-buildd/rep ${MBD_TMP_ID}/
EOF

	# @todo: Create extra sources
	# @todo: Create extra sources: arch-specific
	MBD_TMP_MBD="${MBD_TMP_DIR}/extra.any.list"
	mkdir -p `basename "${MBD_TMP_MBD}"`
	cat <<EOF >"${MBD_TMP_MBD}"
EOF

	# Update all source chroots
	# @todo: Multiarch: When this is configurable, we should rather use all archs for this host, not dpkg --print-arch
	for arch in `dpkg --print-architecture`; do
		MBD_TMP_LOGFILE="${MBD_HOME}/log/update-${MBD_TMP_ID}-${arch}.log"
		MBD_TMP_CHROOT="mbd-${MBD_TMP_ID}-${arch}-source"
		${MBD_LOG} -s "Updating chroot ${MBD_TMP_CHROOT} (logging to ${MBD_TMP_LOGFILE})..."
		if ! cat <<EOF | schroot -c "${MBD_TMP_CHROOT}" -u root >"${MBD_TMP_LOGFILE}" 2>&1 ; then
set -e
apt-get --yes --ignore-missing dist-upgrade
[ -z "${MBD_CHROOT_EXTRA_PACKAGES}" ] || apt-get --yes install ${MBD_CHROOT_EXTRA_PACKAGES}
apt-get clean

# Workaround for Debian Bug #327477 (bash building)
[ -e /dev/fd ] || ln -sv /proc/self/fd /dev/fd
[ -e /dev/stdin ] || ln -sv fd/0 /dev/stdin
[ -e /dev/stdout ] || ln -sv fd/1 /dev/stdout
[ -e /dev/stderr ] || ln -sv fd/2 /dev/stderr
EOF
			${MBD_LOG} -s "*ERROR* updating chroot ${MBD_TMP_ID} (see ${MBD_TMP_LOGFILE})."
		fi
	done
done

exit 0
