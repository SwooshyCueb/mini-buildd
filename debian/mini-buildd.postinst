#!/bin/sh -e

. /usr/share/debconf/confmodule

#
# Handle /etc/default/mini-buildd
#
DEFAULT_FILE=/etc/default/mini-buildd
db_get mini-buildd/options
MINI_BUILDD_OPTIONS="${RET}"
grep -Eq '^ *MINI_BUILDD_OPTIONS=' "${DEFAULT_FILE}" || printf "MINI_BUILDD_OPTIONS=''\n" >>"${DEFAULT_FILE}"
sed -i "s/^ *MINI_BUILDD_OPTIONS=.*/MINI_BUILDD_OPTIONS=\"${MINI_BUILDD_OPTIONS}\"/" "${DEFAULT_FILE}"

#
# Handle mini-buildd user
#
db_get mini-buildd/home
MINI_BUILDD_HOME="${RET}"
if ! getent passwd mini-buildd >/dev/null; then
	# Fresh install: Add a new system user/group: mini-buildd/mini-buildd
	adduser --system --group --shell /bin/bash --home "${MINI_BUILDD_HOME}" mini-buildd
else
	# Existing user

	# Compat (<0.9.6): Always fix old-style user/group: mini-buildd/sbuild to mini-buildd/mini-buildd
	addgroup --system mini-buildd
	usermod --gid=mini-buildd mini-buildd

	# Fix HOME if needed
	usermod --home="${MINI_BUILDD_HOME}" --move-home mini-buildd
fi

# Always (re-)add to group sbuild
addgroup mini-buildd sbuild

# Always (re-)write mini-buildd's fstab to use with schroot We
# need mini-buildd's spool (dependent on HOME) always
# bind-mounted for the way we call sbuild.
cat <<EOF >/etc/schroot/mini-buildd/fstab
# fstab: static file system information for chroots.
# Note that the mount point will be prefixed by the chroot path
# (CHROOT_PATH)
#
# <file system>	<mount point>	<type>	<options>	<dump>	<pass>
/proc		/proc		none    rw,bind        0       0
/sys		/sys		none    rw,bind        0       0
${MINI_BUILDD_HOME}/var/spool		${MINI_BUILDD_HOME}/var/spool		none    rw,bind        0       0
EOF

#
# Handle password
#
db_get mini-buildd/admin_password
MINI_BUILDD_ADMIN_PASSWORD="${RET}"
if [ -n "${MINI_BUILDD_ADMIN_PASSWORD}" ]; then
	printf "Setting admin password..."
	su mini-buildd -c "mini-buildd --set-admin-password='${MINI_BUILDD_ADMIN_PASSWORD}'"
	db_set mini-buildd/admin_password ""
	printf "done.\n"
fi

#DEBHELPER#

exit 0
