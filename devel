#!/bin/bash -e

MBD_HOME=~mini-buildd

# Use first found mirror from sources as default
_read_mirror()
{
	for s in /etc/apt/sources.list $(ls /etc/apt/sources.list.d/*.list 2>/dev/null | sort); do
		[ -z "${MIRROR}" ] || break
		MIRROR=$(grep "^deb " "${s}" 2>/dev/null | head -n1 | cut -d" " -f2)
	done
	read -p "Mirror: " -e -i "${MIRROR}" MIRROR
}

_head()
{
	printf "\n=> ${*}\n"
}


mbd_purge()
{
	_head "Purging ${MBD_HOME}"
	sudo dpkg --purge mini-buildd

	# @todo: Workaround only as long as mini-buildd doesn't yet do it
	sudo rm -v -f /etc/schroot/chroot.d/mini-buildd-*

	# Also test mini-buildd's internal sbuild key workaround
	sudo rm -v -f /var/lib/sbuild/apt-keys/*
}

mbd_build()
{
	_head "Building snapshot..."
	git dch --snapshot --auto --ignore-branch
	git-buildpackage --git-ignore-new --git-ignore-branch -us -uc
}

mbd_install()
{
	_head "Installing snapshot..."
	cat <<EOF | sudo debconf-set-selections --verbose -
mini-buildd mini-buildd/admin_password password admin
#mini-buildd mini-buildd/options string --verbose --verbose --debug
mini-buildd mini-buildd/options string --verbose --debug
EOF
	sudo debi
}

mbd_test()
{
	(
		cd ./examples
		./packages.testbuild
	)
}

mbd_default()
{
	_head "Creating default config..."
	_read_mirror
	sudo su - mini-buildd -c "mini-buildd --foreground --verbose --verbose --debug --create-default-config=${MIRROR}"
	# @todo: Workaround as long as mini-buildd does not detect the changed config (or code is moved to webapp).
	sudo /etc/init.d/mini-buildd restart
}

mbd_all()
{
	mbd_build
	mbd_purge
	mbd_install
	mbd_default
	mbd_test
}

for c in $(compgen -A function | grep '^mbd_'); do
	ACTIONS+="[${c:4}] "
done
trap "printf '\nUsage: ${0} ${ACTIONS}\n' >&2" ERR

[ "${*}" ]

for ACTION in ${*}; do
	mbd_${ACTION}
done
